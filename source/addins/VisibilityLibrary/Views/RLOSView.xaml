<UserControl
    x:Class="VisibilityLibrary.Views.VisibilityRLOSView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:VisibilityLibrary"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prop="clr-namespace:VisibilityLibrary.Properties"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="595"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/VisibilityLibrary;component/MAResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVis" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer Padding="0,0,3,0" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ProgressBar
                    Name="pbStatus"
                    Grid.ColumnSpan="3"
                    Width="Auto"
                    Margin="3,3,0,0"
                    HorizontalAlignment="Stretch"
                    IsIndeterminate="True"
                    Visibility="{Binding DisplayProgressBar}" />

                <TextBlock
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="3,3,0,0"
                    HorizontalAlignment="Stretch"
                    Text="{x:Static prop:Resources.LabelInputSurface}" />
                <Grid Grid.Row="1" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        x:Name="cmbInputSurface"
                        Height="Auto"
                        Margin="3,3,0,0"
                        ItemsSource="{Binding SurfaceLayerNames}"
                        SelectedItem="{Binding SelectedSurfaceName}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button
                        Grid.Column="1"
                        Margin="3,3,0,0"
                        Style="{StaticResource buttonProperties}" />
                </Grid>
                <TextBlock
                    Grid.Row="2"
                    Margin="3,3,0,0"
                    HorizontalAlignment="Stretch"
                    Text="{x:Static prop:Resources.LabelObserverPoints}" />
                <ComboBox
                    Grid.Row="3"
                    Grid.ColumnSpan="3"
                        Margin="3,3,0,0"
                        ItemsSource="{Binding RLOS_ObserverLyrNames}"
                        SelectedItem="{Binding SelectedRLOS_ObserverLyrName}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox
                    Grid.Row="4"
                    Grid.ColumnSpan="2"
                    Margin="3,3,0,0"
                    VerticalContentAlignment="Center"
                    Style="{StaticResource textboxStyle}"
                    Text="{Binding Path=Point1Formatted, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                    <TextBox.InputBindings>
                        <KeyBinding
                            Key="Enter"
                            Command="{Binding EnterKeyCommand}"
                            CommandParameter="{x:Static prop:Resources.ToolModeObserver}" />
                    </TextBox.InputBindings>
                </TextBox>

                <ToggleButton
                    Grid.Row="4"
                    Grid.Column="2"
                    Margin="3,3,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsChecked="{Binding ObserverToolActive}"
                    Command="{Binding ActivateToolCommand}"
                    CommandParameter="{x:Static prop:Resources.ToolModeObserver}"
                    ToolTip="{x:Static prop:Resources.TooltipMapPointTool}">
                    <Image
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Right"
                        Source="/VisibilityLibrary;component/Images/Add_Point.png" />
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ListBox
                    x:Name="listBoxObservers"
                    Grid.Row="5"
                    Grid.ColumnSpan="3"
                    Height="60"
                    Margin="3,3,0,0"
                    ItemsSource="{Binding ObserverAddInPoints}"
                    PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    SelectionMode="Multiple"
                    Style="{StaticResource listboxStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Text}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <MenuItem
                                Command="{Binding DataContext.ImportCSVFileCommand}"
                                CommandParameter="{x:Static prop:Resources.ToolModeObserver}"
                                Header="{x:Static prop:Resources.LabelImport}"/>
                            <MenuItem
                                Command="{Binding DataContext.PasteCoordinatesCommand}"
                                CommandParameter="{x:Static prop:Resources.ToolModeObserver}"
                                  Header="{x:Static prop:Resources.LabelPaste}"/>
                            <MenuItem
                                Command="{Binding DataContext.DeletePointCommand}"
                                CommandParameter="{Binding Path=SelectedItems}"
                                Header="{x:Static prop:Resources.MenuLabelDelete}" />
                            <MenuItem
                                Command="{Binding DataContext.DeleteAllPointsCommand}"
                                CommandParameter="{x:Static prop:Resources.ToolModeObserver}"
                                Header="{x:Static prop:Resources.MenuLabelDeleteAll}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.InputBindings>
                        <KeyBinding
                            Key="Delete"
                            Command="{Binding DeletePointCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}" />
                    </ListBox.InputBindings>
                </ListBox>

                <CheckBox
                    Grid.Row="6"
                    Grid.ColumnSpan="3"
                    Margin="3,9,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Content="{x:Static prop:Resources.LabelNonVisible}"
                    IsChecked="{Binding ShowNonVisibleData}"
                    ToolTip="{x:Static prop:Resources.LabelNonVisible}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <StackPanel
                    Grid.Row="7"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        Width="60"
                        Margin="3,20,0,0"
                        Command="{Binding CancelCommand}"
                        Content="{x:Static prop:Resources.LabelCancel}"
                        ToolTip="{x:Static prop:Resources.LabelCancel}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=listBoxObservers, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsRLOSValidSelection}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button
                        Width="60"
                        Margin="3,20,0,0"
                        Command="{Binding SubmitCommand}"
                        Content="{x:Static prop:Resources.LabelOK}"
                        ToolTip="{x:Static prop:Resources.LabelOK}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=listBoxObservers, Path=HasItems}" Value="True" />
                                            <Condition Binding="{Binding ElementName=tbObserverOffset, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbSurfaceOffset, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbMinDistance, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbMaxDistance, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbHFOVFrom, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbHFOVTo, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbVFOVFrom, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding ElementName=tbVFOVTo, Path=(Validation.HasError)}" Value="False" />
                                            <Condition Binding="{Binding IsRunning}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsRLOSValidSelection}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button
                        Margin="3,20,0,0"
                        Command="{Binding ClearGraphicsCommand}"
                        Content="{x:Static prop:Resources.LabelClearGraphics}"
                        ToolTip="{x:Static prop:Resources.LabelClearGraphics}"
                        Visibility="{Binding Path=ClearGraphicsVisible, Converter={StaticResource BoolToVis}}" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMapGraphics}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                
                <Expander
                    Grid.Row="8"
                    Grid.ColumnSpan="3"
                    Margin="3,3,0,0"
                    HorizontalAlignment="Stretch"
                    IsExpanded="False">
                    <Expander.Header>
                        <Label Content="{x:Static prop:Resources.LabelObserverOptions}" />
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <GroupBox Grid.ColumnSpan="4" Header="{x:Static prop:Resources.LabelOffsets}">
                            <StackPanel>
                                <Label
                                    Grid.Row="0"
                                    Grid.ColumnSpan="2"
                                    Content="{x:Static prop:Resources.LabelObserverOffset}" />
                                <TextBox
                                    x:Name="tbObserverOffset"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding ObserverOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <Label
                                    Grid.ColumnSpan="4"
                                    Content="{x:Static prop:Resources.LabelSurfaceOffset}" />
                                <TextBox
                                    x:Name="tbSurfaceOffset"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding SurfaceOffset, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <ComboBox
                                    x:Name="cmbOffsetUnitType"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="3,3,0,0"
                                    ItemsSource="{Binding Source={StaticResource lineDistanceData}}"
                                    SelectedItem="{Binding Path=OffsetUnitType, Mode=TwoWay}">
                                </ComboBox>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox
                            Grid.Row="6"
                            Grid.ColumnSpan="4"
                            Header="{x:Static prop:Resources.LabelDistance}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox
                                    x:Name="tbMinDistance"
                                    Grid.Column="0"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Stretch"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding MinDistance, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <TextBlock
                                    Grid.Column="1"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="{x:Static prop:Resources.LabelTo}" />
                                    <TextBox
                                    x:Name="tbMaxDistance"
                                    Grid.Column="2"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Stretch"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding MaxDistance, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </Grid>
                                <ComboBox
                                    x:Name="cmbDistanceUnitType"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="3,3,0,0"
                                    ItemsSource="{Binding Source={StaticResource lineDistanceData}}"
                                    SelectedItem="{Binding Path=DistanceUnitType, Mode=TwoWay}">
                                </ComboBox>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox
                            Grid.Row="7"
                            Grid.ColumnSpan="4"
                            Header="{x:Static prop:Resources.LabelFieldOfView}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label
                                    Grid.ColumnSpan="3"
                                    Content="{x:Static prop:Resources.LabelHorizontalFOV}" />
                                <TextBox
                                    x:Name="tbHFOVFrom"
                                    Grid.Row="1"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding LeftHorizontalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    ToolTip="{x:Static prop:Resources.TooltipHFOVValidRange}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Text="{x:Static prop:Resources.LabelTo}" />
                                <TextBox
                                    x:Name="tbHFOVTo"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding RightHorizontalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    ToolTip="{x:Static prop:Resources.TooltipHFOVValidRange}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <Label
                                    Grid.Row="2"
                                    Grid.ColumnSpan="3"
                                    Content="{x:Static prop:Resources.LabelVerticalFOV}" />
                                <TextBox
                                    x:Name="tbVFOVFrom"
                                    Grid.Row="3"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding BottomVerticalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    ToolTip="{x:Static prop:Resources.TooltipBottomFOVValidRange}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>

                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Margin="3,3,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="{x:Static prop:Resources.LabelTo}" />
                                <TextBox
                                    x:Name="tbVFOVTo"
                                    Grid.Row="3"
                                    Grid.Column="2"
                                    Margin="3,3,0,0"
                                    Style="{StaticResource textboxStyle}"
                                    Text="{Binding TopVerticalFOV, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                    ToolTip="{x:Static prop:Resources.TooltipTopFOVValidRange}"
                                    Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding EnterKeyCommand}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                                <ComboBox
                                    x:Name="cmbDegreeDistanceType"
                                    Grid.Row="4"
                                    Grid.ColumnSpan="3"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="3,3,0,0"
                                    ItemsSource="{Binding Source={StaticResource angularDistanceData}}"
                                    SelectedItem="{Binding Path=AngularUnitType, Mode=TwoWay}">
                                </ComboBox>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Expander>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
