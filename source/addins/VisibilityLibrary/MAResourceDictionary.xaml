<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:VisibilityLibrary"
    xmlns:prop="clr-namespace:VisibilityLibrary.Properties"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <local:EnumToFriendlyNameConverter x:Key="enumItemsConverter" />
    <ControlTemplate x:Key="errorTemplate">
        <Grid ClipToBounds="False">
            <Image
                Width="16"
                Height="16"
                Margin="0,0,3,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Source="/VisibilityLibrary;component/Images/GenericErrorStop16.png"
                ToolTip="{Binding [0].ErrorContent}" />
            <Border
                Margin="-1"
                BorderBrush="Red"
                BorderThickness="1">
                <AdornedElementPlaceholder Name="adornedElement" />
            </Border>
        </Grid>
    </ControlTemplate>
    <ObjectDataProvider
        x:Key="lineDistanceData"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:TypeExtension TypeName="local:DistanceTypes" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider
        x:Key="angularDistanceData"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:TypeExtension TypeName="local:AngularTypes" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <!--  store here your styles  -->
    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Height="Auto"
                        Margin="0"
                        VerticalAlignment="Center"
                        Text="{Binding Path=., Mode=OneWay, Converter={StaticResource enumItemsConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="buttonProperties" TargetType="Button">
        <Setter Property="Content">
            <Setter.Value>
                <Image
                    Width="16"
                    Height="16"
                    Source="/VisibilityLibrary;component/Images/GeoprocessingEnvironmentSettings16.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Command" Value="{Binding EditPropertiesDialogCommand}" />
        <Setter Property="ToolTip" Value="{x:Static prop:Resources.TooltipEditProperties}" />
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="textboxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listboxStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Esri_TextControlBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="1.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="1"
                            SnapsToDevicePixels="true" 
                            BorderThickness="1" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="2" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            RecognizesAccessKey="True" 
                            Content="{TemplateBinding ContentControl.Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>    
</ResourceDictionary>